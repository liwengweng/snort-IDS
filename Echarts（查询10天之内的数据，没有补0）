前端代码：
<div id="out" align="center">
 <!-- 为ECharts准备一个具备大小（宽高）的Dom -->
    <div id="main" style="width: 1200px;height:400px;"></div>
</div>  
    <script type="text/javascript">
        
        var myChart = echarts.init(document.getElementById('main'));
         // 显示标题，图例和空的坐标轴
         myChart.setOption({
             title: {
                 text: '实时数据柱状图'
             },
             tooltip: {},
             legend: {
                 data:['次数']
             },
             xAxis: {
                 data: []
             },
             yAxis: {},
             series: [{
                 name: '次数',
                 type: 'bar',
                 data: []
             }]
         });
         
         myChart.showLoading();    //数据加载完之前先显示一段简单的loading动画
         
         var names=[];    //类别数组（实际用来盛放X轴坐标值）
         var nums=[];    //销量数组（实际用来盛放Y坐标值）
        
         $.ajax({
             type : "post",
             async : true,            //异步请求（同步请求将会锁住浏览器，用户其他操作必须等待请求完成才可以执行）
             url : "chartservlet",    //请求发送到chartservlet处
             data : {},
             dataType : "json",        //返回数据形式为json
             success : function(result) {
                 //请求成功时执行该函数内容，result即为服务器返回的json对象
                 if (result) {
                        for(var i=0;i<result.length;i++){       
                           names.push(result[i].date);    //挨个取出类别并填入类别数组
                           
                         }
                        for(var i=0;i<result.length;i++){       
                            nums.push(result[i].num);    //挨个取出销量并填入销量数组
                          }
                        myChart.hideLoading();    //隐藏加载动画
                        myChart.setOption({        //加载数据图表
                            xAxis: {
                                data: names
                            },
                            series: [{
                                // 根据名字对应到相应的系列
                                name: '次数',
                                data: nums
                            }]
                        });
                 }
            },
             error : function(errorMsg) {
                 //请求失败时执行该函数
             alert(2);
             myChart.hideLoading();
             }
        });

  </script>


后台servlet：
protected void doGet(HttpServletRequest request, HttpServletResponse response) throws ServletException, IOException {
		// TODO Auto-generated method stub
		try {
			String sqlSearch=null;
			sqlSearch="select td.tdate as date,IFNULL(count(timestamp),0) as num from (select timestamp from event,iphdr where event.cid = iphdr.cid and  event.sid = iphdr.sid) tt right join (select DATE_SUB(CURDATE(), INTERVAL n.i DAY) as tdate from num   n) td on date_format(timestamp ,'%Y-%m-%d' )=td.tdate   group by td.tdate" ;
			//sqlSearch="select * from it";
			ResultSet rs=null;
			rs=DbUtils.excuteQueryt(sqlSearch);
			ResultSetMetaData metaData =  rs.getMetaData();  
	        int columnCount= metaData.getColumnCount();   
	        
	        JSONArray array = new JSONArray();
	        while(rs.next()){
	         JSONObject jsonObj = new JSONObject();       
	         for(int i = 1; i <= columnCount;i++)  
	          {  
	           String columnName = metaData.getColumnLabel(i);  
	           String value =rs.getString(columnName);  
	           jsonObj.put(columnName, value);  
	          }  
	          array.put(jsonObj);  
	        }
	       // System.out.println("转换JSON数据：");  
	       // System.out.println(array.toString());  
	        DbUtils.close();
	        response.setContentType("text/html; charset=utf-8");
	        response.getWriter().write(array.toString());
	        
	    } catch (Exception e) {

	        e.printStackTrace();// TODO: handle exception
	    }     
	}
	
